[bumpversion]
current_version = 5.9.0
commit = True
tag = True
tag_name = {new_version}

[bumpversion:file:CHANGES.rst]
search = 
	`Unreleased <https://github.com/crim-ca/weaver/tree/master>`_ (latest)
	========================================================================
replace = 
	`Unreleased <https://github.com/crim-ca/weaver/tree/master>`_ (latest)
	========================================================================
	
	Changes:
	--------
	- No change.
	
	Fixes:
	------
	- No change.
	
	.. _changes_{new_version}:
	
	`{new_version} <https://github.com/crim-ca/weaver/tree/{new_version}>`_ ({now:%%Y-%%m-%%d})
	========================================================================

[bumpversion:file:README.rst]
search = {current_version}
replace = {new_version}

[bumpversion:file:.zenodo.json]
search = {current_version}
replace = {new_version}

[bumpversion:file:weaver/__meta__.py]
search = {current_version}
replace = {new_version}

[bumpversion:file:Makefile]
search = APP_VERSION ?= {current_version}
replace = APP_VERSION ?= {new_version}

[bumpversion:file:docker/Dockerfile-base]
search = LABEL version="{current_version}"
replace = LABEL version="{new_version}"

[tool:pytest]
addopts = 
	--strict-markers
	--tb=native
	--ignore=tests/smoke
	weaver/
log_cli = false
log_level = DEBUG
python_files = test_*.py
markers = 
	cli: mark test as related to CLI operations
	testbed14: mark test as 'testbed14' validation
	functional: mark test as functionality validation
	quotation: mark test with quotation extension
	workflow: mark test as workflow execution (E2E)
	online: mark test to need internet connection
	slow: mark test to be slow
	remote: mark test with remote Weaver instance requirement
	vault: mark test with Vault file feature validation
	html: mark test as related to HTML rendering
	oap_part1: mark test as 'OGC API - Processes - Part 1: Core' functionalities
	oap_part2: mark test as 'OGC API - Processes - Part 2: Deploy, Replace, Undeploy (DRU)' functionalities
	oap_part3: mark test as 'OGC API - Processes - Part 3: Workflows and Chaining' functionalities
	oap_part4: mark test as 'OGC API - Processes - Part 4: Job Management' functionalities
	openeo: mark test as evaluating 'openEO' functionalities
filterwarnings = 
	ignore:No file specified for WPS-1 providers registration:RuntimeWarning
	ignore:.*configuration setting.*weaver\.cwl_processes_dir.*:RuntimeWarning
	ignore:Configuration directory .* for CWL .*:RuntimeWarning
	ignore:Could not retrieve at least one of required login parameters:weaver.warning.MissingParameterWarning
	ignore:.*geojson\.org.*:urllib3.exceptions.InsecureRequestWarning
	ignore:.*iana\.org.*:urllib3.exceptions.InsecureRequestWarning

[isort]
line_length = 120
multi_line_output = 3
lines_between_types = 0
lines_between_sections = 1
combine_as_imports = true
order_by_type = true
classes = CWL,JSON,KVP,IO
treat_all_comments_as_code = true
default_section = THIRDPARTY
sections = FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
extra_standard_library = posixpath,typing,typing_extensions
known_third_party = cornice_swagger,cwltool,cwt,docker,mock
known_first_party = weaver,tests
skip = *.egg*,build,env,src,venv,reports,node_modules

[bandit]
skips = B101,B320,B410
exclude = *.egg-info,./build,./dist,./env,./tests,test_*
targets = .

[flake8]
ignore = E126,E226,E402,F401,W503,W504,B007,B009,B010,B023
max-line-length = 120
exclude = 
	src,
	.git,
	__pycache__,
	docs,
	build,
	dist,
	eggs,
	env,
	parts,
	examples,
	node_modules,

[doc8]
max-line-length = 120
ignore-path = docs/build,docs/source/autoapi
# FIXME: ignore false positives (https://github.com/PyCQA/doc8/issues/171)
ignore-path-errors = docs/source/processes.rst;D000,

[docformatter]
recursive = true
wrap-descriptions = 0
wrap-summaries = 120
make-summary-multi-line = True
pre-summary-newline = True

[pydocstyle]
add_ignore = D100,D101,D102,D103,D104,D105,D107,D200,D202,D204,D212,D401
add_select = D201,D213

[pylint]

[coverage:run]
branch = true
source = ./
include = weaver/*
omit = 
	setup.py
	docs/*
	tests/*
	*_mako

[coverage:report]
exclude_lines = 
	pragma: no cover
	raise OSError
	raise AssertionError
	raise NotImplementedError
	if TYPE_CHECKING:
	if __name__ == "__main__":
	LOGGER.debug
	LOGGER.info
	LOGGER.warning
	LOGGER.error
	LOGGER.exception
	LOGGER.log
	self.logger.debug
	self.logger.info
	self.logger.warning
	self.logger.error
	self.logger.exception
	self.logger.log
	@overload
	if not result.success:
	raise PackageAuthenticationError
	raise PackageExecutionError
	raise PackageNotFound
	raise PackageParsingError
	raise PackageRegistrationError
	raise PackageTypeError
