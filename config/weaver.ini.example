# NOTE: This configuration file is employed by Docker smoke test to immediately identify any problematic setting.

###
# app configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/environment.html
###

[app:main]
use = egg:weaver

pyramid.reload_templates = false
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en

# mongodb
mongodb.host = mongodb
mongodb.port = 27017
mongodb.db_name = weaver

# caching
cache.type = memory
cache.doc.expire = 86400
cache.doc.enabled = true
cache.request.expire = 60
cache.request.enabled = false
cache.result.expire = 3600
cache.result.enabled = false
cache.quotation.expire = 3600
cache.quotation.enabled = true

# NOTE:
#   For all below parameters, settings suffixed by `_url` are automatically generated from their corresponding `_path`
#   settings using `weaver.url` if they are not provided. Otherwise, the explicit definition provided by `_url` suffixed
#   setting is used. The obtained full URL (either generated or explicitly provided) are used for response body values
#   and for external monitoring, resource access, etc. while the `_path` suffixed settings are used internally.
#
#   Providing explicit `_url` settings that differ from the generated result of `weaver.url`+`_path` therefore allows
#   you to configure the application to report different *external* routes than the *internal* ones, allowing to define,
#   amongst other things, secured access points or other advanced server-side behaviour, but it then becomes your
#   responsibility to correctly map your server routes to internal routes after applying the server-side operation.

# --- Weaver Configuration ---
# See documentation for more details
#   DEFAULT: current instance offers a minimal subset of operations as 'basic' OGC API - Processes (i.e.: no deploy)
#   ADES:    current instance deploys and executes applications locally (disable remote, providers and Workflow support)
#   EMS:     current instance dispatches execution to other remote ADES or WPS providers
#   HYBRID:  current instance does both ADES and EMS roles with flexible combinations depending on situation
weaver.configuration = HYBRID
weaver.url = http://localhost:4001

# Static endpoint to external schema locations for reference in responses.
# If not provided, the current instance OpenAPI JSON path is employed instead.
weaver.schema_url =

# --- Weaver Logging ---
# When provided, this value will override every weaver-specific level defined in other section logging configuration
# Otherwise, their individual levels are employed as provided by other logging sections from this configuration file
weaver.log_level =

# --- Weaver requests extension flags ---
# SSL verification should be enabled for secured connections
# setting is available for convenience, debug purposes and local environments
# preferably, use specific request options
weaver.ssl_verify = true
# file with request options to be used with 'weaver.utils.request_extra'
# see 'requests_options.yml.example'
weaver.request_options =

# --- Weaver Execution settings ---
# maximum wait time allowed for Prefer header to run Job/Quote synchronously
# over this limit, they will automatically fallback to asynchronous execution/estimation
weaver.execute_sync_max_wait = 20

# --- Weaver Quotation settings ---
# enable support of quotation extension
# https://github.com/opengeospatial/ogcapi-processes/tree/master/extensions/quotation
weaver.quotation = true
weaver.quotation_sync_max_wait = 20
# parameters to accomplish quote estimation
weaver.quotation_docker_image = registry.gitlab.com/crim.ca/clients/cubewerx/quote-estimator:0.2.0
weaver.quotation_docker_username =
weaver.quotation_docker_password =
# currency conversion
weaver.quotation_currency_default = USD
weaver.quotation_currency_converter =
weaver.quotation_currency_token =

# --- Weaver CWL settings ---
# NOTE: [experimental]
# enforce provided effective user/group identifiers for Application Package execution
# values must be resolved as integers
# (default: use cwltool auto-resolution according to running machine and current user/group)
weaver.cwl_euid =
weaver.cwl_egid =
# directory where to load predefined process definitions defined with CWL files
# default configuration directory is used if this entry is removed
# only CWL files are considered, lookup in directory is recursive
weaver.cwl_processes_dir =
weaver.cwl_processes_register_error = false

# --- Weaver WPS settings ---
weaver.wps = true
weaver.wps_url =
weaver.wps_path = /ows/wps
weaver.wps_output = true
weaver.wps_output_context =
weaver.wps_output_dir = /tmp/weaver/wps-outputs
weaver.wps_output_url =
weaver.wps_output_path = /wpsoutputs
weaver.wps_output_s3_bucket =
weaver.wps_output_s3_region =
weaver.wps_workdir =

# --- Weaver WPS metadata ---
# all attributes under "metadata:main" can be specified as 'weaver.wps_metadata_<field>'
# (reference: https://pywps.readthedocs.io/en/master/configuration.html#metadata-main)
weaver.wps_metadata_identification_title=Weaver
weaver.wps_metadata_identification_abstract=Weaver internal WPS used for demo and testing.
weaver.wps_metadata_identification_keywords=Weaver,WPS,OGC
# access constraints can be comma-separated
weaver.wps_metadata_identification_accessconstraints=NONE
weaver.wps_metadata_identification_fees=NONE
weaver.wps_metadata_provider_name=CRIM
weaver.wps_metadata_provider_url=http://pavics-weaver.readthedocs.org/en/latest/
weaver.wps_metadata_contact_name=Francis Charette-Migneault
weaver.wps_metadata_contact_position=Research Software Developer
weaver.wps_metadata_contact_phone=1-514-840-1234
weaver.wps_metadata_contact_fax=1-514-840-1244
weaver.wps_metadata_contact_deliveryPoint=405, Ogilvy Avenue, suite 101
weaver.wps_metadata_contact_city=Montréal
weaver.wps_metadata_contact_stateorprovince=Québec
weaver.wps_metadata_contact_country=Canada
weaver.wps_metadata_contact_postalcode=H3N 1M3
weaver.wps_metadata_contact_email=info@crim.ca
weaver.wps_metadata_contact_url=https://www.crim.ca/en/contact-us
weaver.wps_metadata_contact_role=Information

# --- Weaver WPS REST API ---
weaver.wps_restapi = true
weaver.wps_restapi_url =
weaver.wps_restapi_path = /

# --- Weaver job email notification ---
weaver.wps_email_encrypt_salt = salty-email
weaver.wps_email_encrypt_rounds = 100000
weaver.wps_email_notify_smtp_host =
weaver.wps_email_notify_from_addr = example@email.com
weaver.wps_email_notify_password = 123456
weaver.wps_email_notify_port = 25
weaver.wps_email_notify_ssl = true
weaver.wps_email_notify_template_dir =
weaver.wps_email_notify_template_default =

# --- Weaver other configurations ---
# additional processes to load at startup (see 'wps_processes.yml.example')
weaver.wps_processes_file = wps_processes.yml
# known remote ADES for processes redirection based on data-sources when using EMS configuration
# (see 'data_sources.yml.example' and 'weaver.processes.sources' for more details)
weaver.data_sources = data_sources.yml
# comma-separated list of key=value options to add to settings
weaver.extra_options =
# vault location
weaver.vault = true
weaver.vault_dir = /tmp/vault

###
# celery scheduler config
# https://pypi.python.org/pypi/pyramid_celery
###
[celery]
#USE_CELERYCONFIG = True
BROKER_URL = mongodb://mongodb:27017/celery
# Result backend is required for SYNC execution.
#   Using only the backend type matching the broker URL will automatically resolve to use it database location.
#   For an alternative result location, provide the full backend directly rather than using "mongodb_backend_settings".
#   This setting is not correctly parsed (dict) by "pyramid_celery", and separate [celery:mongodb_backend_settings] is
#   also not found. If more configuration are required, consider using a "celeryconfig" (and "USE_CELERYCONFIG = True").
#   That configuration should be placed at the root of weaver since "pyramid_celery" doesn't support custom locations.
#       https://github.com/sontek/pyramid_celery/pull/89
RESULT_BACKEND = mongodb
# RESULT_BACKEND = mongodb://mongodb:27017/celery

###
# wsgi server configuration
###

[server:main]
# NOTE: Gunicorn not supported on Windows, use waitress instead

# --- gunicorn ---
use = egg:gunicorn#main
bind = 0.0.0.0:4001
workers = 10
timeout = 10

# --- waitress ---
# use = egg:waitress#main
# listen = localhost:4002
# threads = 10
# channel_timeout = 10

###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
###

[loggers]
keys = root, weaver, celery, cwltool

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_weaver]
level = INFO
handlers = console
qualname = weaver
propagate = 0

[logger_celery]
level = INFO
handlers = console
qualname = celery
propagate = 0

[logger_cwltool]
level = INFO
handlers = console
qualname = cwltool
propagate = 0

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = [%(asctime)s] %(levelname)-8.8s [%(threadName)s][%(name)s] %(message)s
